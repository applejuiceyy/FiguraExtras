plugins {
    id 'fabric-loom' version '1.6-SNAPSHOT'
    id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

repositories {
    maven { url = "https://maven.quiltmc.org/repository/release/" }
    maven { url 'https://jitpack.io' }
    maven { url 'https://maven.wispforest.io' }
    maven { url "https://repo.maven.apache.org/maven2/" }
    maven { url "https://maven.figuramc.org/releases" }


    maven {
        name = "Modrinth"
        url = "https://api.modrinth.com/maven"
    }
}


dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings loom.layered {
        mappings("org.quiltmc:quilt-mappings:${project.minecraft_version}+build.1:intermediary-v2")
        officialMojangMappings()
    }

    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "org.figuramc:figura-fabric:${project.figura}+1.20.1"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    include(implementation("org.eclipse.lsp4j:org.eclipse.lsp4j:0.22.0"))
    include(implementation("org.eclipse.lsp4j:org.eclipse.lsp4j.debug:0.22.0"))
    include(implementation("org.eclipse.lsp4j:org.eclipse.lsp4j.jsonrpc:0.22.0"))
    include(implementation("org.eclipse.lsp4j:org.eclipse.lsp4j.jsonrpc.debug:0.22.0"))

    implementation("com.neovisionaries:nv-websocket-client:2.14")

    include(implementation(project(":LuaBridge")) {
        exclude group: "org.ow2.asm", module: "asm"
        exclude group: "org.slf4j", module: "slf4j-api"
        exclude group: "com.google.guava", module: "guava"
    })
}

processResources {
    inputs.property "version", project.version
    inputs.property "minecraft_version", project.minecraft_version
    inputs.property "loader_version", project.loader_version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version,
                "minecraft_version": project.minecraft_version,
                "loader_version": project.loader_version
    }
}

def targetJavaVersion = 17
tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release = targetJavaVersion
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    archivesBaseName = project.archives_base_name
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    repositories {

    }
}